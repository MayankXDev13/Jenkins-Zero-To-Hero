pipeline {
  agent any

  environment {
    SONAR_URL = "http://3.238.116.44:9000"
    DOCKER_IMAGE = "abhishekf5/ultimate-cicd:${BUILD_NUMBER}"
    GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
    GIT_USER_NAME = "iam-veeramalla"
  }

  stages {
    stage('Checkout') {
      steps {
        sh 'echo "‚úÖ Checkout stage passed"'
      }
    }

    stage('Build and Test') {
      steps {
        sh '''
          echo "üõ†Ô∏è Building and testing the application"
          cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
          mvn clean package -e -X
        '''
      }
    }

    stage('Static Code Analysis') {
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
            echo "üîé Running SonarQube analysis"
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            mvn sonar:sonar \
              -Dsonar.login=$SONAR_AUTH_TOKEN \
              -Dsonar.host.url=$SONAR_URL
          '''
        }
      }
    }

    stage('Build and Push Docker Image') {
      steps {
        script {
          echo "üê≥ Building Docker image: ${DOCKER_IMAGE}"
          sh "docker build -t ${DOCKER_IMAGE} java-maven-sonar-argocd-helm-k8s/spring-boot-app"

          echo "üì§ Pushing Docker image to Docker Hub"
          docker.withRegistry('https://index.docker.io/v1/', 'docker-cred') {
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            dockerImage.push()
          }
        }
      }
    }

    stage('Update Deployment File') {
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            echo "üì¶ Updating deployment YAML with image tag"
            git config user.email "abhishek.xyz@gmail.com"
            git config user.name "Abhishek Veeramalla"
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "‚ö†Ô∏è No changes to commit"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }
  }
}
